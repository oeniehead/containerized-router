volumes:
  isp_duid:
  ingress_duid:

services:
  upstream-test:
    image: upstream-test
    privileged: true
    environment:
      - MAC_TO_IFACE_1=f0:00:00:00:02:02:internet
    networks:
      upstream_network:
        mac_address: f0:00:00:00:02:02
        ipv4_address: 5.0.0.2
        ipv6_address: 2001:ffff::2
  isp-kpn:
    image: isp-kpn
    privileged: true
    environment:
      - MAC_TO_IFACE_1=f0:00:00:00:00:02:isp_trunk
      - MAC_TO_IFACE_2=f0:00:00:00:02:03:internet
    volumes:
      - isp_duid:/run/duid
    networks:
      isp_network:
        mac_address: f0:00:00:00:00:02
      upstream_network:
        mac_address: f0:00:00:00:02:03
        ipv4_address: 5.0.0.3
        ipv6_address: 2001:ffff::3

  ingress-kpn:
    image: ingress-kpn
    privileged: true
    environment:
      - MAC_TO_IFACE_1=f0:00:00:00:00:03:isp_in
      - MAC_TO_IFACE_2=f0:00:00:00:01:03:eventbus
      - MAC_TO_IFACE_3=f0:00:00:00:02:03:trunk
      - DMZ_VLAN=99
      - DMZ_IPV4=10.99.0.2/16
      - DMZ_IPV6=fd:0:0:99::2/64
    volumes:
      - ingress_duid:/run/duid
    devices:
      - "/dev/ppp:/dev/ppp"
    networks:
      isp_network:
        mac_address: f0:00:00:00:00:03
      eventbus:
        mac_address: f0:00:00:00:01:03
      trunk:
        mac_address: f0:00:00:00:02:03

  middleware-firewall:
    image: middleware-firewall
    privileged: true
    environment:
      - MAC_TO_IFACE_1=f0:00:00:00:01:04:eventbus
      - MAC_TO_IFACE_2=f0:00:00:00:02:04:trunk
      - VLAN_5=management
      - VLAN_10=thuis
      - VLAN_11=cluster
      - VLAN_99=dmz
    sysctls:
      - "net.ipv6.conf.all.forwarding=1"
    networks:
      eventbus:
        mac_address: f0:00:00:00:01:04
      trunk:
        mac_address: f0:00:00:00:02:04

  test-client:
    image: test-client
    privileged: true
    environment:
      - MAC_TO_IFACE_1=f0:00:00:00:02:05:trunk
      - VLAN=10
    networks:
      trunk:
        mac_address: f0:00:00:00:02:05

networks:
  upstream_network:
    driver: bridge
    enable_ipv6: true
    internal: true
    driver_opts:
      com.docker.network.bridge.name: upstream_net
    ipam:
      config:
      - subnet: 5.0.0.0/24
        gateway: 5.0.0.1
      - subnet: 2001:ffff::/96
        gateway: 2001:ffff::1
  trunk:
    external: true
  isp_network:
    external: true
  eventbus:
    external: true
  # trunk:
  #   driver: bridge
  #   enable_ipv6: true
  #   internal: true
  #   driver_opts:
  #     com.docker.network.bridge.name: trunk
  # isp_network:
  #   driver: bridge
  #   internal: true
  #   driver_opts:
  #     com.docker.network.bridge.name: isp_network
  # eventbus:
  #   driver: bridge
  #   internal: true
  #   driver_opts:
  #     com.docker.network.bridge.name: eventbus

#docker network create --driver=bridge --internal --ipv6 --opt com.docker.network.bridge.name=isp_network isp_network 